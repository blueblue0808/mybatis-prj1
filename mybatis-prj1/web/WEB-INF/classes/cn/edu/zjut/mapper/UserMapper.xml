<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//Mybatis.org/DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--<mapper namespace="cn.edu.zjut.mapper.UserMapper">-->
<mapper namespace="cn.edu.zjut.dao.UserDao">
    <resultMap type="cn.edu.zjut.pojo.MapUser" id="myResult">
        <!-- property 是 com.pojo.MapUser 类中的属性-->
        <!-- column 是查询结果的列名，可以来自不同的表 -->
        <id property="m_uid" column="uid"/>
        <result property="m_uname" column="uname"/>
        <result property="m_usex" column="usex"/>
    </resultMap>
    <parameterMap type="cn.edu.zjut.pojo.MapUser" id="myParameter">
        <parameter property="m_uid" resultMap="ResultMap"/>
        <parameter property="m_uname" resultMap="ResultMap"/>
        <parameter property="m_usex" resultMap="ResultMap"/>
    </parameterMap>
<!--    下面这种也行-->
<!--    <parameterMap type="cn.edu.zjut.pojo.MapUser" id="myParameter">-->
<!--        <parameter property="m_uname" javaType="String"/>-->
<!--        <parameter property="m_usex" javaType="String"/>-->
<!--    </parameterMap>-->
<!--    只有用userDao的时候才用下面那个namespace-->
<!--<mapper namespace="cn.edu.zjut.dao.UserDao">-->
    <select id="selectUserById" parameterType="Integer"
            resultType="cn.edu.zjut.po.MyUser">
        Select * from user where uid = #{uid}
    </select>
    <!--    <select id="selectAllUser" resultType="cn.edu.zjut.po.MyUser">-->
    <!--        Select * from user-->
    <!--    </select>-->
<!--    <select id="selectAllUser" resultType="cn.edu.zjut.po.MyUser"-->
<!--            parameterType="map">-->
<!--        Select * from user-->
<!--        where uname like concat('%',#{u_name},'%')-->
<!--          and usex = #{u_sex}-->
<!--    </select>-->
<!--    <select id="selectAllUser" resultType="cn.edu.zjut.po.MyUser"-->
<!--            parameterType="cn.edu.zjut.pojo.SelectUserParam">-->
<!--        Select * from user-->
<!--        where uname like concat('%',#{u_name},'%')-->
<!--          and usex = #{u_sex}-->
<!--    </select>-->
    <select id="selectAllUser" resultType="map">
        Select * from user
    </select>
    <select id="selectResultMap" resultMap="myResult">
        Select * from user
    </select>
    <insert id="addUser" parameterType="cn.edu.zjut.po.MyUser">
        Insert into user (uname,usex) values(#{uname},#{usex})
    </insert>
    <insert id="addParameterMap" parameterMap="myParameter">
        Insert into user (uname,usex) values(#{m_uname},#{m_usex})
    </insert>
    <update id="updateUser" parameterType="cn.edu.zjut.po.MyUser">
        update user set uname=#{uname}, usex=#{usex} where uid=#{uid}
    </update>
    <update id="updateParameterMap" parameterMap="myParameter">
        update user set uname=#{m_uname}, usex=#{m_usex} where uid=#{m_uid}
    </update>
    <delete id="deleteUser" parameterType="Integer">
        delete from user where uid = #{uid}
    </delete>
    <delete id="deleteParameterMap" parameterMap="myParameter">
        delete from user where uid = #{m_uid}
    </delete>


<!--    <resultMap id="userWithOrder" type="cn.edu.zjut.po.MyUser">-->
<!--        <id property="uid" column="uid"/>-->
<!--        <id property="uname" column="uname"/>-->
<!--        <collection property="orderList" ofType="cn.edu.zjut.po.Order" select="cn.edu.zjut.dao.OrderDao.selectOrderById1"/>-->
<!--    </resultMap>-->
<!--    <select id="listWithOrder" parameterType="integer" resultMap="userWithOrder">-->
<!--        select uid,uname from user where uid=#{uid}-->
<!--    </select>-->

    <resultMap id="userWithOrder1" type="cn.edu.zjut.po.MyUser">
        <id property="uid" column="uid"/>
        <id property="uname" column="uname"/>
        <collection property="orderList" ofType="cn.edu.zjut.po.Order">
            <id property="orderId" column="order_id" />
        </collection>
    </resultMap>
    <select id="listWithOrder1" parameterType="integer" resultMap="userWithOrder1">
        select u.uid,u.uname,o.order_id from user u LEFT JOIN `order` o ON u.uid=o.uid where u.uid=#{uid}
    </select>
</mapper>